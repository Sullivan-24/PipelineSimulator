from .variables import *

G = 1024 * 1024 * 1024
M = 1024 * 1024
K = 1024
B = G

BASE_SOLUTION = True
RUN_MODE = RunMode.GUROBI_SOLVE
# RUN_MODE = RunMode.SIM_SOLVE
SOLVING_TIME_LIMIT = 60 * 30
GLOBAL_TIME = 0
CHUNK_NUM = 4
DEVICE_NUM = 4
MICRO_BATCH_TIMES_OF_DEVICE_NUM = 2
MAX_ACTIVATION_TIMES_OF_STAGE_NUM = 1

STAGE_SEARCH_METHOD = StageSearchOrder.Random

FPW_TIME = 24
FPW_IGW_RATE = 1.25
FPW_PGW_RATE = 0.75 
IGW_TIME = FPW_TIME * FPW_IGW_RATE
PGW_TIME = FPW_TIME * FPW_PGW_RATE
IGW_TIME = 36
PGW_TIME = 12
COMM_TIME = 1

SPLIT_BACKPROP = True
SCHEDULE_METHOD = SchedulePriority.GREEDY
if RUN_MODE == RunMode.SIM_SOLVE:
    if SCHEDULE_METHOD == SchedulePriority.ONE_F_ONE_B:
        SPLIT_BACKPROP = False
        CHUNK_NUM = 1
        IGW_TIME += PGW_TIME
    elif SCHEDULE_METHOD == SchedulePriority.INTERLEAVED:
        SPLIT_BACKPROP = False
        IGW_TIME += PGW_TIME
    elif SCHEDULE_METHOD == SchedulePriority.ZBH1:
        SPLIT_BACKPROP = True
        CHUNK_NUM = 1
    elif SCHEDULE_METHOD in (SchedulePriority.GREEDY, SchedulePriority.ZBV):
        SPLIT_BACKPROP = True

STAGE_NUM = int(DEVICE_NUM * CHUNK_NUM + 0)
MICRO_BATCH_NUM = int(DEVICE_NUM * MICRO_BATCH_TIMES_OF_DEVICE_NUM + 0)
MODEL_LAYER_NUM = STAGE_NUM + 0
MAX_ACTIVATION_COUNTS = STAGE_NUM * MAX_ACTIVATION_TIMES_OF_STAGE_NUM
WORKLOAD_TYPE_NUM = 3 if SPLIT_BACKPROP else 2

MODEL_PARA_SIZE = DEVICE_NUM
PP_SIZE = DEVICE_NUM
TP_SIZE = MODEL_PARA_SIZE // PP_SIZE

GPU_MAX_MEM = 80 * G
MODEL_PARA_NUM = 7 * B
MIX_TRAINING = True

OFFLOAD_TIME = 4

def UPDATE_TIME():
    global GLOBAL_TIME
    GLOBAL_TIME+=1

def DECREASE_TIME():
    global GLOBAL_TIME
    GLOBAL_TIME-=1

def GET_TIME():
    global GLOBAL_TIME
    return GLOBAL_TIME

def GET_MODEL_PARTITION_MEM():
    global MODEL_PARA_SIZE, MODEL_PARA_NUM, MIX_TRAINING
    # if MIX_TRAINING:
    #     return (MODEL_PARA_NUM * )


